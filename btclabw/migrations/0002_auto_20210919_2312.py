# Generated by Django 3.2.7 on 2021-09-19 23:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('btclabw', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='dcastrategy',
            name='check_result',
            field=models.CharField(max_length=255, verbose_name='The result for the last check'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='frequency',
            field=models.IntegerField(verbose_name='How often to buy'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Is the strategy active?'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='is_dummy',
            field=models.BooleanField(default=False, verbose_name='Should we buy in dummy mode?'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='last_check',
            field=models.DateTimeField(verbose_name='Last date we checked for a DCA buy'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='order_cost',
            field=models.FloatField(verbose_name='Ammount to buy in quote currency'),
        ),
        migrations.AlterField(
            model_name='dcastrategy',
            name='symbol',
            field=models.CharField(max_length=20, verbose_name='Symbol to buy'),
        ),
        migrations.AlterField(
            model_name='exchange',
            name='name',
            field=models.CharField(choices=[('binance', 'Binance'), ('buda', 'Buda'), ('gemini', 'Gemini'), ('bitso', 'Bitso'), ('okcoin', 'OKCoin'), ('bitstamp1', 'Bitstamp')], max_length=100, verbose_name='ccxt exchange id'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='created_on',
            field=models.DateField(auto_now=True, verbose_name='Date created'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Is the membership active?'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='membership_type',
            field=models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('pro', 'Pro')], max_length=25, verbose_name='Membership type'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, verbose_name="Person's email address"),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(max_length=30, verbose_name="Person's first name"),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_contact',
            field=models.DateTimeField(verbose_name='Last date user was contacted'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(max_length=30, verbose_name="Person's last name"),
        ),
        migrations.AlterField(
            model_name='user',
            name='notify_to_email',
            field=models.BooleanField(verbose_name='Whether or not to notify to Email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='notify_to_telegram',
            field=models.BooleanField(verbose_name='Whether or not to notify to Telegram'),
        ),
        migrations.AlterField(
            model_name='user',
            name='telegram_chat_id',
            field=models.CharField(max_length=10, verbose_name='Telegram Chat Id'),
        ),
        migrations.AlterField(
            model_name='userexchange',
            name='api_key',
            field=models.CharField(max_length=100, verbose_name="Exchange's API Key"),
        ),
        migrations.AlterField(
            model_name='userexchange',
            name='api_secret',
            field=models.CharField(max_length=100, verbose_name="Exchange's API Secret"),
        ),
        migrations.CreateModel(
            name='ExchangeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placed_on', models.DateTimeField(verbose_name='Date and time the order was placed')),
                ('symbol', models.CharField(max_length=20, verbose_name='Symbol bought in this order')),
                ('order_type', models.CharField(choices=[('market', 'Market'), ('limit', 'Limit')], max_length=10, verbose_name='Type of order placed')),
                ('order_side', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10, verbose_name='Type of order placed')),
                ('price', models.FloatField(verbose_name='Quote price for the order')),
                ('ammount', models.FloatField(verbose_name='Ammount of symbol bought')),
                ('cost', models.FloatField(verbose_name='Order cost')),
                ('strategy', models.CharField(choices=[('dca', 'Dollar Cost Average'), ('dip', 'Buy the dip')], max_length=10, verbose_name='Strategy used for the order')),
                ('is_dummy', models.BooleanField(default=False, verbose_name='Should we buy in dummy mode?')),
                ('order_id', models.CharField(max_length=50, verbose_name='Order id returned by the exchage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.user')),
            ],
        ),
        migrations.CreateModel(
            name='DIPStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is the strategy active?')),
                ('symbol', models.CharField(max_length=20, verbose_name='Symbol to buy')),
                ('order_cost', models.FloatField(verbose_name='Ammount to buy on in quote currency')),
                ('is_dummy', models.BooleanField(default=False, verbose_name='Should we buy in dummy mode?')),
                ('min_drop_value', models.FloatField(verbose_name='Drop value to trigger the buy')),
                ('min_drop_units', models.CharField(choices=[('%', 'Percentage'), ('SD', 'Standard Deviation')], max_length=5, verbose_name='Units to calculate the drop value')),
                ('min_additional_drop_pct', models.FloatField(verbose_name='Additional percentage drop value to buy again')),
                ('cost_increase', models.FloatField(verbose_name='Ammount to buy in quote currency for the next drop')),
                ('last_check', models.DateTimeField(verbose_name='Last date we checked for a DCA buy')),
                ('check_result', models.CharField(max_length=255, verbose_name='The result for the last check')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.user')),
            ],
            options={
                'unique_together': {('user', 'symbol')},
            },
        ),
    ]
