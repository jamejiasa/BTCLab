# Generated by Django 3.2.7 on 2021-09-19 21:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('binance', 'Binance'), ('buda', 'Buda'), ('gemini', 'Gemini'), ('bitso', 'Bitso'), ('okcoin', 'OKCoin'), ('bitstamp1', 'Bitstamp')], help_text='Exchange', max_length=100, verbose_name='ccxt exchange id')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='First Name', max_length=30, verbose_name="Person's first name")),
                ('last_name', models.CharField(help_text='Last Name', max_length=30, verbose_name="Person's last name")),
                ('email', models.EmailField(help_text='Email', max_length=254, verbose_name="Person's email address")),
                ('last_contact', models.DateTimeField(help_text='Last contact date', verbose_name='Last date user was contacted')),
                ('telegram_chat_id', models.CharField(help_text='Telegram chat ID', max_length=10, verbose_name='Telegram Chat Id')),
                ('notify_to_telegram', models.BooleanField(default=True, help_text='Notify to Telegram?', verbose_name='Whether or not to notify to Telegram')),
                ('notify_to_email', models.BooleanField(default=False, help_text='Notify to Email?', verbose_name='Whether or not to notify to Email address')),
            ],
        ),
        migrations.CreateModel(
            name='UserExchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(help_text='API key for the selecteed Exchange', max_length=100, verbose_name="Exchange's API Key")),
                ('api_secret', models.CharField(help_text='API secret for the selecteed Exchange', max_length=100, verbose_name="Exchange's API Secret")),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.exchange')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.user')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now=True, help_text='Member since', verbose_name='Date created')),
                ('is_active', models.BooleanField(default=True, help_text='The user is active?', verbose_name='Is the membership active?')),
                ('membership_type', models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('pro', 'Pro')], help_text='Membership type', max_length=25, verbose_name='Membership type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.user')),
            ],
        ),
        migrations.CreateModel(
            name='DCAStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Is the strategy active?', verbose_name='Is the strategy active?')),
                ('symbol', models.CharField(help_text='Symbol to buy', max_length=20, verbose_name='Symbol to buy')),
                ('order_cost', models.FloatField(help_text='Ammount to buy', verbose_name='Ammount to buy on in quote currency')),
                ('frequency', models.IntegerField(help_text='How often to buy the symbol', verbose_name='How often to buy')),
                ('is_dummy', models.BooleanField(default=False, help_text='Try strategy in dummy mode?', verbose_name='Should we buy in dummy mode?')),
                ('last_check', models.DateTimeField(help_text='Last checked on', verbose_name='Last date we checked for a DCA buy')),
                ('check_result', models.DateTimeField(help_text='Last check result', verbose_name='The result for the last check')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='btclabw.user')),
            ],
            options={
                'unique_together': {('user', 'symbol')},
            },
        ),
    ]
